name: neus-blender-${dataset.scene}
tag: ""
seed: 42

dataset:
  name: blender
  scene: ???
  root_dir: ./load/nerf_synthetic/${dataset.scene}
  has_normal: true
  img_wh:
    - 256
    - 256
  # img_downscale: 1 # specify training image size by either img_wh or img_downscale
  near_plane: 2.0
  far_plane: 6.0
  train_split: "train"
  val_split: "val"
  test_split: "test"
  num_workers: 8
  view_weights: [ 1,1,1,1,1,1,1,1 ]

model:
  name: neus
  radius: 0.5
  num_samples_per_ray: 8192
  train_num_rays: 256
  max_train_num_rays: 8192
  grid_prune: true
  grid_prune_occ_thre: 0.001
  dynamic_ray_sampling: true
  batch_image_sampling: true
  randomized: true
  ray_chunk: 4096
  cos_anneal_end: 20000
  learned_background: false
  background_color: random
  variance:
    init_val: 0.3
    modulate: false
  geometry:
    name: volume-sdf
    radius: ${model.radius}
    feature_dim: 13
    grad_type: analytic
    isosurface:
      method: mc
      resolution: 512
      chunk: 2097152
      threshold: 0.0
    xyz_encoding_config:
      otype: HashGrid
      n_levels: 16 # 12 modify
      n_features_per_level: 2
      log2_hashmap_size: 19
      base_resolution: 32
      per_level_scale: 1.3195079107728942
      include_xyz: true
      start_level: 4
      start_step: 0
      update_steps: 1000
    mlp_network_config:
      otype: VanillaMLP
      activation: ReLU
      output_activation: none
      n_neurons: 64
      n_hidden_layers: 1
      sphere_init: true
      sphere_init_radius: 0.5
      weight_norm: true
  texture:
    name: volume-color
    input_feature_dim: ${model.geometry.feature_dim}
    dir_encoding_config:
      otype: SphericalHarmonics
      degree: 4
    mlp_network_config:
      otype: VanillaMLP
      activation: ReLU
      output_activation: none
      n_neurons: 64
      n_hidden_layers: 2
    color_activation: sigmoid

system:
  name: neus-system
  loss:
    lambda_rgb_mse: 10.0 # change from 0.5
    lambda_rgb_l1: 0.
    lambda_mask: 1.0     # change from 1.0
    lambda_eikonal: 0.  # cannot be too large, will cause holes to thin objects change from 0.2
    lambda_normal: 10.0  # cannot be too large
    lambda_3d_normal_smooth: 5.0 # change from 1.0
    # lambda_curvature: [0, 0.0, 1.e-4, 1000] # topology warmup
    lambda_curvature: 0.
    lambda_sparsity: 0.2  # change from 0.5
    lambda_distortion: 0.0
    lambda_distortion_bg: 0.0
    lambda_opaque: 0.0
    sparsity_scale: 100.0 # change from 100.0
    geo_aware: true
    rgb_p_ratio: 1.0    # change from 0.8
    normal_p_ratio: 1.0 # change from 0.8
    mask_p_ratio: 1.0   # change from 0.9
  optimizer:
    name: AdamW
    args:
      lr: 0.01
      betas: [0.9, 0.99]
      eps: 1.e-15
    params:
      geometry:
        lr: 0.001 # change from 0.001 
      texture:
        lr: 0.0005 # change from 0.0005
      variance:
        lr: 0.0005 # change from 0.0005
  constant_steps: 500
  warmup_steps: 500
  scheduler:
    name: SequentialLR
    interval: step
    milestones:
      - ${system.warmup_steps}
    schedulers:
      - name: LinearLR # linear warm-up in the first system.warmup_steps steps
        args:
          start_factor: 0.02
          end_factor: 1.0
          total_iters: ${system.warmup_steps}
      - name: ExponentialLR
        args:
          gamma: ${calc_exp_lr_decay_rate:0.1,${sub:${trainer.max_steps},${system.warmup_steps}}}

checkpoint:
  save_top_k: -1
  every_n_train_steps: ${trainer.max_steps}

export:
  chunk_size: 2097152
  export_vertex_color: True

trainer:
  max_steps: 20000 #change from 20000
  log_every_n_steps: 100
  num_sanity_val_steps: 0
  val_check_interval: 5000
  limit_train_batches: 1.0
  limit_val_batches: 1
  enable_progress_bar: true
  precision: 16
